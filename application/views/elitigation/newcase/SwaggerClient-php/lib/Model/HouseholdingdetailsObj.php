<?php
/**
 * HouseholdingdetailsObj
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * DCRC_CitizenDetailsAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * HouseholdingdetailsObj Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HouseholdingdetailsObj implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'householdingdetailsObj';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cid' => 'string',
        'country' => 'string',
        'dob' => 'string',
        'father_name' => 'string',
        'first_issued_date' => 'string',
        'first_name' => 'string',
        'gender' => 'string',
        'household_no' => 'string',
        'last_name' => 'string',
        'middle_name' => 'string',
        'mobile_number' => 'string',
        'mother_name' => 'string',
        'occupation' => 'string',
        'dzongkhag_id' => 'string',
        'dzongkhag_name' => 'string',
        'gewog_id' => 'string',
        'gewog_name' => 'string',
        'house_no' => 'string',
        'thram_no' => 'string',
        'village_serial_no' => 'string',
        'village_name' => 'string',
        'place_of_birth' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cid' => null,
        'country' => null,
        'dob' => null,
        'father_name' => null,
        'first_issued_date' => null,
        'first_name' => null,
        'gender' => null,
        'household_no' => null,
        'last_name' => null,
        'middle_name' => null,
        'mobile_number' => null,
        'mother_name' => null,
        'occupation' => null,
        'dzongkhag_id' => null,
        'dzongkhag_name' => null,
        'gewog_id' => null,
        'gewog_name' => null,
        'house_no' => null,
        'thram_no' => null,
        'village_serial_no' => null,
        'village_name' => null,
        'place_of_birth' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cid' => 'cid',
        'country' => 'country',
        'dob' => 'dob',
        'father_name' => 'fatherName',
        'first_issued_date' => 'firstIssuedDate',
        'first_name' => 'firstName',
        'gender' => 'gender',
        'household_no' => 'householdNo',
        'last_name' => 'lastName',
        'middle_name' => 'middleName',
        'mobile_number' => 'mobileNumber',
        'mother_name' => 'motherName',
        'occupation' => 'occupation',
        'dzongkhag_id' => 'dzongkhagId',
        'dzongkhag_name' => 'dzongkhagName',
        'gewog_id' => 'gewogId',
        'gewog_name' => 'gewogName',
        'house_no' => 'houseNo',
        'thram_no' => 'thramNo',
        'village_serial_no' => 'villageSerialNo',
        'village_name' => 'villageName',
        'place_of_birth' => 'placeOfBirth'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cid' => 'setCid',
        'country' => 'setCountry',
        'dob' => 'setDob',
        'father_name' => 'setFatherName',
        'first_issued_date' => 'setFirstIssuedDate',
        'first_name' => 'setFirstName',
        'gender' => 'setGender',
        'household_no' => 'setHouseholdNo',
        'last_name' => 'setLastName',
        'middle_name' => 'setMiddleName',
        'mobile_number' => 'setMobileNumber',
        'mother_name' => 'setMotherName',
        'occupation' => 'setOccupation',
        'dzongkhag_id' => 'setDzongkhagId',
        'dzongkhag_name' => 'setDzongkhagName',
        'gewog_id' => 'setGewogId',
        'gewog_name' => 'setGewogName',
        'house_no' => 'setHouseNo',
        'thram_no' => 'setThramNo',
        'village_serial_no' => 'setVillageSerialNo',
        'village_name' => 'setVillageName',
        'place_of_birth' => 'setPlaceOfBirth'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cid' => 'getCid',
        'country' => 'getCountry',
        'dob' => 'getDob',
        'father_name' => 'getFatherName',
        'first_issued_date' => 'getFirstIssuedDate',
        'first_name' => 'getFirstName',
        'gender' => 'getGender',
        'household_no' => 'getHouseholdNo',
        'last_name' => 'getLastName',
        'middle_name' => 'getMiddleName',
        'mobile_number' => 'getMobileNumber',
        'mother_name' => 'getMotherName',
        'occupation' => 'getOccupation',
        'dzongkhag_id' => 'getDzongkhagId',
        'dzongkhag_name' => 'getDzongkhagName',
        'gewog_id' => 'getGewogId',
        'gewog_name' => 'getGewogName',
        'house_no' => 'getHouseNo',
        'thram_no' => 'getThramNo',
        'village_serial_no' => 'getVillageSerialNo',
        'village_name' => 'getVillageName',
        'place_of_birth' => 'getPlaceOfBirth'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cid'] = isset($data['cid']) ? $data['cid'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['dob'] = isset($data['dob']) ? $data['dob'] : null;
        $this->container['father_name'] = isset($data['father_name']) ? $data['father_name'] : null;
        $this->container['first_issued_date'] = isset($data['first_issued_date']) ? $data['first_issued_date'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['household_no'] = isset($data['household_no']) ? $data['household_no'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['middle_name'] = isset($data['middle_name']) ? $data['middle_name'] : null;
        $this->container['mobile_number'] = isset($data['mobile_number']) ? $data['mobile_number'] : null;
        $this->container['mother_name'] = isset($data['mother_name']) ? $data['mother_name'] : null;
        $this->container['occupation'] = isset($data['occupation']) ? $data['occupation'] : null;
        $this->container['dzongkhag_id'] = isset($data['dzongkhag_id']) ? $data['dzongkhag_id'] : null;
        $this->container['dzongkhag_name'] = isset($data['dzongkhag_name']) ? $data['dzongkhag_name'] : null;
        $this->container['gewog_id'] = isset($data['gewog_id']) ? $data['gewog_id'] : null;
        $this->container['gewog_name'] = isset($data['gewog_name']) ? $data['gewog_name'] : null;
        $this->container['house_no'] = isset($data['house_no']) ? $data['house_no'] : null;
        $this->container['thram_no'] = isset($data['thram_no']) ? $data['thram_no'] : null;
        $this->container['village_serial_no'] = isset($data['village_serial_no']) ? $data['village_serial_no'] : null;
        $this->container['village_name'] = isset($data['village_name']) ? $data['village_name'] : null;
        $this->container['place_of_birth'] = isset($data['place_of_birth']) ? $data['place_of_birth'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets cid
     *
     * @return string
     */
    public function getCid()
    {
        return $this->container['cid'];
    }

    /**
     * Sets cid
     *
     * @param string $cid cid
     *
     * @return $this
     */
    public function setCid($cid)
    {
        $this->container['cid'] = $cid;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets dob
     *
     * @return string
     */
    public function getDob()
    {
        return $this->container['dob'];
    }

    /**
     * Sets dob
     *
     * @param string $dob dob
     *
     * @return $this
     */
    public function setDob($dob)
    {
        $this->container['dob'] = $dob;

        return $this;
    }

    /**
     * Gets father_name
     *
     * @return string
     */
    public function getFatherName()
    {
        return $this->container['father_name'];
    }

    /**
     * Sets father_name
     *
     * @param string $father_name father_name
     *
     * @return $this
     */
    public function setFatherName($father_name)
    {
        $this->container['father_name'] = $father_name;

        return $this;
    }

    /**
     * Gets first_issued_date
     *
     * @return string
     */
    public function getFirstIssuedDate()
    {
        return $this->container['first_issued_date'];
    }

    /**
     * Sets first_issued_date
     *
     * @param string $first_issued_date first_issued_date
     *
     * @return $this
     */
    public function setFirstIssuedDate($first_issued_date)
    {
        $this->container['first_issued_date'] = $first_issued_date;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets household_no
     *
     * @return string
     */
    public function getHouseholdNo()
    {
        return $this->container['household_no'];
    }

    /**
     * Sets household_no
     *
     * @param string $household_no household_no
     *
     * @return $this
     */
    public function setHouseholdNo($household_no)
    {
        $this->container['household_no'] = $household_no;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name last_name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string $middle_name middle_name
     *
     * @return $this
     */
    public function setMiddleName($middle_name)
    {
        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets mobile_number
     *
     * @return string
     */
    public function getMobileNumber()
    {
        return $this->container['mobile_number'];
    }

    /**
     * Sets mobile_number
     *
     * @param string $mobile_number mobile_number
     *
     * @return $this
     */
    public function setMobileNumber($mobile_number)
    {
        $this->container['mobile_number'] = $mobile_number;

        return $this;
    }

    /**
     * Gets mother_name
     *
     * @return string
     */
    public function getMotherName()
    {
        return $this->container['mother_name'];
    }

    /**
     * Sets mother_name
     *
     * @param string $mother_name mother_name
     *
     * @return $this
     */
    public function setMotherName($mother_name)
    {
        $this->container['mother_name'] = $mother_name;

        return $this;
    }

    /**
     * Gets occupation
     *
     * @return string
     */
    public function getOccupation()
    {
        return $this->container['occupation'];
    }

    /**
     * Sets occupation
     *
     * @param string $occupation occupation
     *
     * @return $this
     */
    public function setOccupation($occupation)
    {
        $this->container['occupation'] = $occupation;

        return $this;
    }

    /**
     * Gets dzongkhag_id
     *
     * @return string
     */
    public function getDzongkhagId()
    {
        return $this->container['dzongkhag_id'];
    }

    /**
     * Sets dzongkhag_id
     *
     * @param string $dzongkhag_id dzongkhag_id
     *
     * @return $this
     */
    public function setDzongkhagId($dzongkhag_id)
    {
        $this->container['dzongkhag_id'] = $dzongkhag_id;

        return $this;
    }

    /**
     * Gets dzongkhag_name
     *
     * @return string
     */
    public function getDzongkhagName()
    {
        return $this->container['dzongkhag_name'];
    }

    /**
     * Sets dzongkhag_name
     *
     * @param string $dzongkhag_name dzongkhag_name
     *
     * @return $this
     */
    public function setDzongkhagName($dzongkhag_name)
    {
        $this->container['dzongkhag_name'] = $dzongkhag_name;

        return $this;
    }

    /**
     * Gets gewog_id
     *
     * @return string
     */
    public function getGewogId()
    {
        return $this->container['gewog_id'];
    }

    /**
     * Sets gewog_id
     *
     * @param string $gewog_id gewog_id
     *
     * @return $this
     */
    public function setGewogId($gewog_id)
    {
        $this->container['gewog_id'] = $gewog_id;

        return $this;
    }

    /**
     * Gets gewog_name
     *
     * @return string
     */
    public function getGewogName()
    {
        return $this->container['gewog_name'];
    }

    /**
     * Sets gewog_name
     *
     * @param string $gewog_name gewog_name
     *
     * @return $this
     */
    public function setGewogName($gewog_name)
    {
        $this->container['gewog_name'] = $gewog_name;

        return $this;
    }

    /**
     * Gets house_no
     *
     * @return string
     */
    public function getHouseNo()
    {
        return $this->container['house_no'];
    }

    /**
     * Sets house_no
     *
     * @param string $house_no house_no
     *
     * @return $this
     */
    public function setHouseNo($house_no)
    {
        $this->container['house_no'] = $house_no;

        return $this;
    }

    /**
     * Gets thram_no
     *
     * @return string
     */
    public function getThramNo()
    {
        return $this->container['thram_no'];
    }

    /**
     * Sets thram_no
     *
     * @param string $thram_no thram_no
     *
     * @return $this
     */
    public function setThramNo($thram_no)
    {
        $this->container['thram_no'] = $thram_no;

        return $this;
    }

    /**
     * Gets village_serial_no
     *
     * @return string
     */
    public function getVillageSerialNo()
    {
        return $this->container['village_serial_no'];
    }

    /**
     * Sets village_serial_no
     *
     * @param string $village_serial_no village_serial_no
     *
     * @return $this
     */
    public function setVillageSerialNo($village_serial_no)
    {
        $this->container['village_serial_no'] = $village_serial_no;

        return $this;
    }

    /**
     * Gets village_name
     *
     * @return string
     */
    public function getVillageName()
    {
        return $this->container['village_name'];
    }

    /**
     * Sets village_name
     *
     * @param string $village_name village_name
     *
     * @return $this
     */
    public function setVillageName($village_name)
    {
        $this->container['village_name'] = $village_name;

        return $this;
    }

    /**
     * Gets place_of_birth
     *
     * @return string
     */
    public function getPlaceOfBirth()
    {
        return $this->container['place_of_birth'];
    }

    /**
     * Sets place_of_birth
     *
     * @param string $place_of_birth place_of_birth
     *
     * @return $this
     */
    public function setPlaceOfBirth($place_of_birth)
    {
        $this->container['place_of_birth'] = $place_of_birth;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


